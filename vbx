#!/bin/bash

# VBXModProbe - Advanced VirtualBox Setup Toolkit
# ===============================================
#  ____   ____  _  ____  __  __ ____  ____  _____ ____  
# |  _ \ / ___|| |/ ___||  \/  |  _ \|  _ \| ____|  _ \ 
# | |_) | |    | | |    | |\/| | |_) | |_) |  _| | |_) |
# |  __/| |___ | | |___ | |  | |  __/|  __/| |___|  _ < 
# |_|    \____|/ |\____|/_|  |_|_|   |_|   |_____|_| \_\
#             |__/                         by 0xb0rn3
# ===============================================

# Aesthetic and Functional Enhancements

# Color Palette
RESET='\033[0m'
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'

# Fancy Formatting
HR='‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'

# Progress Spinner
spinner() {
    local pid=$!
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " ${BLUE}[%c]${RESET}  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# Advanced Logging
_log() {
    local type=$1
    local message=$2
    local color

    case $type in
        "info")    color=$GREEN; prefix="[‚ÑπÔ∏è INFO]";;
        "warn")    color=$YELLOW; prefix="[‚ö†Ô∏è WARNING]";;
        "error")   color=$RED; prefix="[‚ùå ERROR]";;
        "success") color=$PURPLE; prefix="[‚úÖ SUCCESS]";;
    esac

    printf "${color}${prefix}${RESET} %s\n" "$message"
}

# Comprehensive Dependency Check
check_dependencies() {
    _log "info" "üîç Performing Comprehensive Dependency Check"
    printf "${CYAN}${HR}${RESET}\n"

    local dependencies=(
        "virtualbox:VirtualBox Package"
        "dkms:Dynamic Kernel Module Support"
        "mokutil:Machine Owner Key Utility"
        "openssl:SSL/TLS Toolkit"
        "linux-headers-$(uname -r):Kernel Headers"
    )

    for dep in "${dependencies[@]}"; do
        package=${dep%:*}
        description=${dep#*:}
        
        if command -v "$package" &> /dev/null || dpkg -s "$package" &> /dev/null; then
            _log "success" "‚úì $description ($package) is installed"
        else
            _log "warn" "‚ö†Ô∏è $description ($package) is NOT installed"
        fi
    done
}

# System Compatibility Banner
system_banner() {
    clear
    printf "${PURPLE}
 ‚ñà‚ñà‚ñí   ‚ñà‚ñì ‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñÑ     ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñÑ‚ñÑ‚ñÑ     
‚ñì‚ñà‚ñà‚ñë   ‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå    ‚ñì‚ñà   ‚ñÄ ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ   
 ‚ñì‚ñà‚ñà  ‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñë ‚ñì‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ 
  ‚ñí‚ñà‚ñà ‚ñà‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ    ‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí‚ñì‚ñà  ‚ñÑ ‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà
   ‚ñí‚ñÄ‚ñà‚ñë  ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí   ‚ñí   ‚ñà‚ñà‚ñí ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí
   ‚ñë ‚ñê‚ñë  ‚ñë‚ñì  ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë   ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë
   ‚ñë ‚ñë‚ñë   ‚ñí ‚ñë  ‚ñë‚ñí ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë  ‚ñë ‚ñë  ‚ñë  ‚ñí   ‚ñí‚ñí 
     ‚ñë‚ñë   ‚ñí ‚ñë  ‚ñë‚ñë   ‚ñë    ‚ñë ‚ñë‚ñí  ‚ñë ‚ñë    ‚ñë     ‚ñë   ‚ñí  
      ‚ñë   ‚ñë     ‚ñë        ‚ñë  ‚ñë  ‚ñë      ‚ñë  ‚ñë      ‚ñë  
     ‚ñë                         Setup Toolkit       
${RESET}"
    printf "${CYAN}${HR}${RESET}\n"
}

# Interactive Confirmation
confirm() {
    read -p "${YELLOW}[‚ùì] $1 (y/N): ${RESET}" response
    [[ ${response,,} =~ ^(yes|y)$ ]]
}

# Main Execution Flow
main() {
    # System Preparation Stage
    system_banner
    
    # Dependency Check
    check_dependencies

    # Interactive Pre-flight Checks
    printf "${CYAN}Pre-flight System Analysis${RESET}\n"
    
    if ! confirm "Would you like to proceed with VirtualBox setup?"; then
        _log "info" "Setup aborted by user."
        exit 0
    fi

    # ... [Rest of the previous script's core functions remain unchanged]
}

# Run main function
main "$@"
